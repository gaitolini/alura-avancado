{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_ordemAtual","_mensagem","Bind","Mensagem","MensageView","_listaNegociacoes","ListaNegociacoes","NegociacoesViews","_service","NegociacaoService","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","erro","texto","setInterval","importaNegociacoes","value","focus","Negociacao","DateHelper","strToDate","parseInt","parseFloat","apaga","mensagem","limpa","event","preventDefault","_criaNegociacao","cadastra","_limpaFormulario","coluna","inverteOrdem","ordena","a","b","obterNegociacoesServer","negociacoesFiltradas"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\r\n\r\n    constructor() {\r\n\r\n        let $ = document.querySelector.bind(document);\r\n        this._inputData = $(\"#data\");\r\n        this._inputQuantidade = $(\"#quantidade\");\r\n        this._inputValor = $(\"#valor\");\r\n\r\n        this._ordemAtual = '';\r\n\r\n        this._mensagem = new Bind(\r\n            new Mensagem(),\r\n            new MensageView($(\"#mensagemView\")),\r\n            'texto'\r\n        );\r\n\r\n        this._listaNegociacoes = new Bind(\r\n            new ListaNegociacoes(),\r\n            new NegociacoesViews($(\"#negociacoesView\")),\r\n            'adiciona', 'limpa', 'ordena', 'inverteOrdem'\r\n        );\r\n\r\n        this._service = new NegociacaoService();\r\n        this._init();\r\n    }\r\n\r\n\r\n    _init() {\r\n\r\n        //carregando o banco de dado \r\n        this._service\r\n            .lista()\r\n            .then(negociacoes =>\r\n                negociacoes.forEach(negociacao =>\r\n                    this._listaNegociacoes.adiciona(negociacao)))\r\n            .catch((erro) =>\r\n                this._mensagem.texto = erro);\r\n\r\n        setInterval(() => {\r\n            this.importaNegociacoes();\r\n        }, 8000);\r\n    }\r\n\r\n    _limpaFormulario() {\r\n        this._inputData.value = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0\r\n\r\n        this._inputData.focus();\r\n    }\r\n\r\n    _criaNegociacao() {\r\n        return new Negociacao(\r\n            DateHelper.strToDate(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value));\r\n\r\n    }\r\n\r\n    apaga() {\r\n\r\n        this._service\r\n            .apaga()\r\n            .then(mensagem => {\r\n                this._mensagem.texto = mensagem;\r\n                this._listaNegociacoes.limpa();\r\n            }).catch(erro => this._mensagem.texto = erro);\r\n\r\n    }\r\n\r\n    adiciona(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        let negociacao = this._criaNegociacao();\r\n\r\n        this._service\r\n            .cadastra(negociacao)\r\n            .then(mensagem => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = mensagem;\r\n                this._limpaFormulario();\r\n            }).catch(erro => this._mensagem.texto = erro);\r\n    }\r\n\r\n    ordena(coluna) {\r\n        if (this._ordemAtual == coluna) {\r\n            //inverte a  ordem da lista\r\n            this._listaNegociacoes.inverteOrdem();\r\n        } else {\r\n\r\n            this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\r\n        }\r\n        this._ordemAtual = coluna;\r\n\r\n    }\r\n\r\n    importaNegociacoes() {\r\n\r\n        this._service\r\n            .obterNegociacoesServer(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoesFiltradas => {\r\n                negociacoesFiltradas.forEach(negociacao => {\r\n                    this._service.cadastra(negociacao)\r\n                        .then(() => this._listaNegociacoes.adiciona(negociacao))\r\n                    this._mensagem.texto = 'Negociações obtidas com sucesso do servidor';\r\n                });\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro)\r\n\r\n    }\r\n\r\n    // let service = this._service;\r\n    // ConnectionFactory\r\n    //     .getConnection()\r\n    //     .then(conexao => {\r\n    //         Promise.all([\r\n    //             service.pullNegociacoesDaSemana(),\r\n    //             service.pullNegociacoesDaSemanaAnterior(),\r\n    //             service.pullNegociacoesDaSemanaRetrasada()\r\n    //         ])\r\n    //             .then(todasNegociacoes =>\r\n    //                 todasNegociacoes\r\n    //                     .reduce((arrayNegociacao, array) => arrayNegociacao.concat(array), [])\r\n    //                     .filter(negociacao =>\r\n    //                         !this._listaNegociacoes.negociacoes.some(negociacaoExistente =>\r\n    //                             JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\r\n    //             )\r\n    //             .then(negociacoesFiltradas => {\r\n    //                 negociacoesFiltradas.forEach(negociacao => {\r\n\r\n    //                     //Pega a conex�o instancia o Dao e add cada negocia��o..\r\n    //                     //..no banco(indexDB)\r\n    //                     new NegociacaoDao(conexao)\r\n    //                         .adiciona(negociacao)\r\n    //                         .then(() => this._listaNegociacoes.adiciona(negociacao))\r\n    //                         .catch(erro => this._mensagem.texto = erro);\r\n    //                 });\r\n    //                 this._mensagem.texto = 'Negociações importadas com sucesso.';\r\n    //             })\r\n    //             .catch(erro => this._mensagem.texto = erro);\r\n\r\n    //     }).catch(erro => this._mensagem.texto = erro)\r\n\r\n    // }\r\n\r\n}"]}