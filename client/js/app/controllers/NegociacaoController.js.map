{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","NegociacoesViews","MensageView","Mensagem","NegociacaoService","DateHelper","Bind","Negociacao","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_ordemAtual","_mensagem","_listaNegociacoes","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","erro","texto","setInterval","importaNegociacoes","value","focus","strToDate","parseInt","parseFloat","apaga","mensagem","limpa","event","preventDefault","_criaNegociacao","cadastra","_limpaFormulario","coluna","inverteOrdem","ordena","a","b","obterNegociacoesServer","negociacoesFiltradas","negociacaoController","currentInstance"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { ListaNegociacoes } from \"../models/ListaNegociacoes\";\r\nimport { NegociacoesViews } from \"../views/NegociacoesView\";\r\nimport { MensageView } from \"../views/MensageView\";\r\nimport { Mensagem } from \"../models/Mensagem\";\r\nimport { NegociacaoService } from \"../services/NegociacaoService\";\r\nimport { DateHelper } from \"../helpers/DateHelper\";\r\nimport { Bind } from \"../helpers/Bind\";\r\nimport { Negociacao } from \"../models/Negociacao\";\r\n\r\nclass NegociacaoController {\r\n\r\n    constructor() {\r\n\r\n        let $ = document.querySelector.bind(document);\r\n        this._inputData = $(\"#data\");\r\n        this._inputQuantidade = $(\"#quantidade\");\r\n        this._inputValor = $(\"#valor\");\r\n\r\n        this._ordemAtual = '';\r\n\r\n        this._mensagem = new Bind(\r\n            new Mensagem(),\r\n            new MensageView($(\"#mensagemView\")),\r\n            'texto'\r\n        );\r\n\r\n        this._listaNegociacoes = new Bind(\r\n            new ListaNegociacoes(),\r\n            new NegociacoesViews($(\"#negociacoesView\")),\r\n            'adiciona', 'limpa', 'ordena', 'inverteOrdem'\r\n        );\r\n\r\n        this._service = new NegociacaoService();\r\n        this._init();\r\n    }\r\n\r\n\r\n    _init() {\r\n\r\n        //carregando o banco de dado \r\n        this._service\r\n            .lista()\r\n            .then(negociacoes =>\r\n                negociacoes.forEach(negociacao =>\r\n                    this._listaNegociacoes.adiciona(negociacao)))\r\n            .catch((erro) =>\r\n                this._mensagem.texto = erro);\r\n\r\n        setInterval(() => {\r\n            this.importaNegociacoes();\r\n        }, 8000);\r\n    }\r\n\r\n    _limpaFormulario() {\r\n        this._inputData.value = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0\r\n\r\n        this._inputData.focus();\r\n    }\r\n\r\n    _criaNegociacao() {\r\n        return new Negociacao(\r\n            DateHelper.strToDate(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value));\r\n\r\n    }\r\n\r\n    apaga() {\r\n\r\n        this._service\r\n            .apaga()\r\n            .then(mensagem => {\r\n                this._mensagem.texto = mensagem;\r\n                this._listaNegociacoes.limpa();\r\n            }).catch(erro => this._mensagem.texto = erro);\r\n\r\n    }\r\n\r\n    adiciona(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        let negociacao = this._criaNegociacao();\r\n\r\n        this._service\r\n            .cadastra(negociacao)\r\n            .then(mensagem => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = mensagem;\r\n                this._limpaFormulario();\r\n            }).catch(erro => this._mensagem.texto = erro);\r\n    }\r\n\r\n    ordena(coluna) {\r\n        if (this._ordemAtual == coluna) {\r\n            //inverte a  ordem da lista\r\n            this._listaNegociacoes.inverteOrdem();\r\n        } else {\r\n\r\n            this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\r\n        }\r\n        this._ordemAtual = coluna;\r\n\r\n    }\r\n\r\n    importaNegociacoes() {\r\n\r\n        this._service\r\n            .obterNegociacoesServer(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoesFiltradas => {\r\n                negociacoesFiltradas.forEach(negociacao => {\r\n                    this._service.cadastra(negociacao)\r\n                        .then(() => this._listaNegociacoes.adiciona(negociacao))\r\n                    this._mensagem.texto = 'Negociações obtidas com sucesso do servidor';\r\n                });\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro)\r\n\r\n    }\r\n\r\n    // let service = this._service;\r\n    // ConnectionFactory\r\n    //     .getConnection()\r\n    //     .then(conexao => {\r\n    //         Promise.all([\r\n    //             service.pullNegociacoesDaSemana(),\r\n    //             service.pullNegociacoesDaSemanaAnterior(),\r\n    //             service.pullNegociacoesDaSemanaRetrasada()\r\n    //         ])\r\n    //             .then(todasNegociacoes =>\r\n    //                 todasNegociacoes\r\n    //                     .reduce((arrayNegociacao, array) => arrayNegociacao.concat(array), [])\r\n    //                     .filter(negociacao =>\r\n    //                         !this._listaNegociacoes.negociacoes.some(negociacaoExistente =>\r\n    //                             JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\r\n    //             )\r\n    //             .then(negociacoesFiltradas => {\r\n    //                 negociacoesFiltradas.forEach(negociacao => {\r\n\r\n    //                     //Pega a conex�o instancia o Dao e add cada negocia��o..\r\n    //                     //..no banco(indexDB)\r\n    //                     new NegociacaoDao(conexao)\r\n    //                         .adiciona(negociacao)\r\n    //                         .then(() => this._listaNegociacoes.adiciona(negociacao))\r\n    //                         .catch(erro => this._mensagem.texto = erro);\r\n    //                 });\r\n    //                 this._mensagem.texto = 'Negociações importadas com sucesso.';\r\n    //             })\r\n    //             .catch(erro => this._mensagem.texto = erro);\r\n\r\n    //     }).catch(erro => this._mensagem.texto = erro)\r\n\r\n    // }\r\n\r\n}\r\n\r\nlet negociacaoController = new NegociacaoController();\r\n\r\nexport function currentInstance() {\r\n\r\n    return negociacaoController;\r\n\r\n}"]}