{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","texto","test","Date","split","reverse","map","item","indice","date","getDate","getMonth","getFullYear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAaA,U;AAET,sCAAc;AAAA;;AACV,0BAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACH;;AAED;AACA;AACA;AACA;AACA;;;;8CAEiBC,K,EAAO;;AAEpB;AACA,4BAAI,CAAC,sBAAsBC,IAAtB,CAA2BD,KAA3B,CAAL,EACI,MAAM,IAAID,KAAJ,CAAU,kCAAV,CAAN;;AAEJ;AACA,kEAAWG,IAAX,mCAAmBF,MAAMG,KAAN,CAAY,GAAZ,EAAiBC,OAAjB,GAA2BC,GAA3B,CAA+B,UAACC,IAAD,EAAOC,MAAP;AAAA,mCAAkBD,OAAOC,SAAS,CAAlC;AAAA,yBAA/B,CAAnB;AACH;;;8CAEgBC,I,EAAM;AACnB,+BAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAkB,CAA9C,UAAmDF,KAAKG,WAAL,EAAnD;AACA;AAEH","file":"DateHelper.js","sourcesContent":["export class DateHelper {\r\n\r\n    constructor() {\r\n        throw new Error('Esta classe não pode ser instanciada');\r\n    }\r\n\r\n    // static strToDate(str) {\r\n    //     if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(str))\r\n    //         throw new Error('Deve estar no formato aaaa-mm-dd');\r\n    //     return new Date(...str.split('-').map((item, i) => item - i % 2));\r\n    // }\r\n\r\n    static strToDate(texto) {\r\n\r\n        // mudamos a validação para aceitar o novo formato!\r\n        if (!/\\d{2}\\/\\d{2}\\/\\d{4}/.test(texto))\r\n            throw new Error('Deve estar no formato dd/mm/aaaa');\r\n\r\n        // veja que usamos no split '/' no lugar de '-'. Usamos `reverse` também para ficar ano/mes/dia.      \r\n        return new Date(...texto.split('/').reverse().map((item, indice) => item - indice % 2));\r\n    }\r\n\r\n    static dateToStr(date) {\r\n        return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n        // return date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\r\n\r\n    }\r\n}"]}