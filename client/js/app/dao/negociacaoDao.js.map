{"version":3,"sources":["../../app-es6/dao/negociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","onerror","console","log","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAASA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCACIC,a;AAET,uCAAYC,UAAZ,EAAwB;AAAA;;AAEpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAY;AAAA;;AAEjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,MACTN,WADS,CAETO,WAFS,CAEG,CAAC,MAAKN,MAAN,CAFH,EAEkB,WAFlB,EAGTO,WAHS,CAGG,MAAKP,MAHR,EAITQ,GAJS,CAILP,UAJK,CAAd;;AAMAI,oCAAQI,SAAR,GAAoB,UAACC,CAAD,EAAO;AACvBP;AACH,6BAFD;;AAIAE,oCAAQM,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAAT,EAAZ;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAKH,yBAjBM,CAAP;AAmBH;;;0CAEKH,U,EAAY;AAAA;;AAEd,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,OACTN,WADS,CAETO,WAFS,CAEG,CAAC,OAAKN,MAAN,CAFH,EAEkB,WAFlB,EAGTO,WAHS,CAGG,OAAKP,MAHR,EAITQ,GAJS,CAILP,UAJK,CAAd;;AAMAI,oCAAQI,SAAR,GAAoB,UAACC,CAAD,EAAO;AACvBP;AACH,6BAFD;;AAIAE,oCAAQM,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAAT,EAAZ;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAKH,yBAjBM,CAAP;AAkBH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOP,SAAP,GAAmB,aAAK;AACpB,oCAAIU,QAAQT,EAAEI,MAAF,CAASM,MAArB;;AAEA,oCAAID,KAAJ,EAAW;AACP,wCAAIE,OAAOF,MAAMG,KAAjB;AACAJ,gDAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;;AAEAP,0CAAMQ,QAAN;AACH,iCALD,MAKO;AACHxB,4CAAQe,WAAR;AACH;AACJ,6BAXD;;AAaAF,mCAAOL,OAAP,GAAiB,aAAK;AAClBC,wCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,uCAAO,wCAAP;AACH,6BAHD;AAKH,yBA3BM,CAAP;AA4BH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGR4B,KAHQ,EAAb;;AAKAZ,mCAAOP,SAAP,GAAmB,aAAK;AACpBN,wCAAQ,qBAAR;AACH,6BAFD;;AAIAa,mCAAOL,OAAP,GAAiB,aAAK;AAClBC,wCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,uCAAO,wCAAP;AACH,6BAHD;AAKH,yBAhBM,CAAP;AAiBH","file":"negociacaoDao.js","sourcesContent":["import { Negociacao } from \"../models/Negociacao\";\r\nexport class NegociacaoDao {\r\n\r\n    constructor(connection) {\r\n\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this\r\n                ._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao);\r\n\r\n            request.onsuccess = (e) => {\r\n                resolve();\r\n            };\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error());\r\n                reject('Não foi possível adicionar a negociação');\r\n            };\r\n\r\n        });\r\n\r\n    }\r\n\r\n    apaga(negociacao) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this\r\n                ._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao);\r\n\r\n            request.onsuccess = (e) => {\r\n                resolve();\r\n            };\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error());\r\n                reject('Não foi possível adicionar a negociação');\r\n            };\r\n\r\n        });\r\n    }\r\n\r\n    listaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let cursor = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = e => {\r\n                let atual = e.target.result;\r\n\r\n                if (atual) {\r\n                    let dado = atual.value;\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n\r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n            }\r\n\r\n            cursor.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possivel listar as negociações');\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    apagaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let cursor = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            cursor.onsuccess = e => {\r\n                resolve('Apagado com sucesso');\r\n            }\r\n\r\n            cursor.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possivel apagar as negociações');\r\n            }\r\n\r\n        })\r\n    }\r\n}"]}