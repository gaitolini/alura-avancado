{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","console","log","send","objeto","setRequestHeader","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;wCAWLC,G,EAAK;;AAEL,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,gCAAIE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;;AAEAI,gCAAIG,kBAAJ,GAAyB,YAAM;;AAE3B,oCAAIH,IAAII,UAAJ,IAAkB,CAAtB,EAAyB;;AAErB,wCAAIJ,IAAIK,MAAJ,IAAc,GAAlB,EAAuB;;AAEnBP,gDAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR;AACH,qCAHD,MAGO;AACHC,gDAAQC,GAAR,CAAYV,IAAIQ,YAAhB;AACAT,+CAAO,sCAAP;AACH;AACJ;AACJ,6BAZD;;AAcAC,gCAAIW,IAAJ;AACH,yBAnBM,CAAP;AAoBH;;;yCAEIf,G,EAAKgB,M,EAAQ;AACd,+BAAO,IAAIf,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,gCAAIE,IAAJ,CAAS,MAAT,EAAiBN,GAAjB,EAAsB,IAAtB;AACAI,gCAAIa,gBAAJ,CAAqB,cAArB,EAAqC,kBAArC;;AAEAb,gCAAIG,kBAAJ,GAAyB,YAAM;AAC3BM,wCAAQC,GAAR,sBAA+BV,IAAIK,MAAnC;;AAEA,oCAAIL,IAAII,UAAJ,IAAkB,CAAtB,EAAyB;;AAErB,wCAAIJ,IAAIK,MAAJ,IAAc,GAAlB,EAAuB;AACnBP,gDAAQ,iDAAR;AAEH,qCAHD,MAGO;AACHC,+CAAO,wBAAP;AACH;AACJ;AAEJ,6BAbD;;AAeAC,gCAAIW,IAAJ,CAASL,KAAKQ,SAAL,CAAeF,MAAf,CAAT;AACH,yBAtBM,CAAP;AAuBH","file":"HttpService.js","sourcesContent":["export class HttpService {\r\n    // 0: requisição ainda não iniciada\r\n\r\n    // 1: conexão com o servidor estabelecida\r\n\r\n    // 2: requisição recebida\r\n\r\n    // 3: processando requisição\r\n\r\n    // 4: requisição está concluída e a resposta está pronta\r\n\r\n    get(url) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url);\r\n\r\n            xhr.onreadystatechange = () => {\r\n\r\n                if (xhr.readyState == 4) {\r\n\r\n                    if (xhr.status == 200) {\r\n\r\n                        resolve(JSON.parse(xhr.responseText));\r\n                    } else {\r\n                        console.log(xhr.responseText);\r\n                        reject('Não foi possível obter dados da URL.');\r\n                    }\r\n                }\r\n            };\r\n\r\n            xhr.send();\r\n        });\r\n    }\r\n\r\n    post(url, objeto) {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open('POST', url, true);\r\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n\r\n            xhr.onreadystatechange = () => {\r\n                console.log(`Status do POST: ${xhr.status}`);\r\n\r\n                if (xhr.readyState == 4) {\r\n\r\n                    if (xhr.status == 200) {\r\n                        resolve('Dados enviados com com sucesso para o servidor.');\r\n\r\n                    } else {\r\n                        reject('Erro no envio de dados');\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            xhr.send(JSON.stringify(objeto));\r\n        });\r\n    }\r\n}"]}