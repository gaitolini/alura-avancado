{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","Promise","resolve","reject","get","then","negociacoes","map","Negociacao","Date","objeto","data","quantidade","valor","catch","console","log","erro","negociacao","post","mensagemOK","listaAtual","all","pullNegociacoesDaSemana","pullNegociacoesDaSemanaAnterior","pullNegociacoesDaSemanaRetrasada","todasNegociacoes","reduce","arrayNegociacao","array","concat","filter","some","JSON","stringify","negociacaoExistente","Error","ConnectionFactory","getConnection","NegociacaoDao","connection","dao","adiciona","listaTodos","apagaTodos"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    pullNegociacoesDaSemanaRetrasada() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http.get('/negociacoes/retrasada')\r\n                .then(negociacoes => {\r\n\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    reject('Não foi possível obter as negociações da semana retrasada.');\r\n\r\n                });\r\n\r\n        });\r\n    }\r\n\r\n    pullNegociacoesDaSemana() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http.get('/negociacoes/semana')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    reject('Não foi possível obter as negociações da semana.');\r\n                });\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    pullNegociacoesDaSemanaAnterior() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http.get('/negociacoes/anterior')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    reject('Não foi possível obter as negociações da semana anterior.');\r\n                });\r\n        });\r\n    }\r\n\r\n    pushNegociacoes(negociacao) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http.post('/negociacoes', negociacao)\r\n                .then(mensagemOK => {\r\n                    console.log(mensagemOK);\r\n                    resolve('Negociação enviada para o servidor com sucesso.');\r\n\r\n                }).catch(erro => {\r\n                    console.log(erro);\r\n                    reject('Não foi possivél enviar a negociação para o Servidor');\r\n                });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    obterNegociacoesServer(listaAtual) {\r\n        return Promise.all([\r\n            this.pullNegociacoesDaSemana(),\r\n            this.pullNegociacoesDaSemanaAnterior(),\r\n            this.pullNegociacoesDaSemanaRetrasada()\r\n        ])\r\n            .then(todasNegociacoes =>\r\n                todasNegociacoes\r\n                    .reduce((arrayNegociacao, array) => arrayNegociacao.concat(array), [])\r\n                    .filter(negociacao =>\r\n                        !listaAtual.some(negociacaoExistente =>\r\n                            JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\r\n            )\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obeter negociações do servidor');\r\n            });\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação cadastrada com sucesso!')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível adicionar a negociação.\")\r\n            });\r\n    }\r\n\r\n    lista() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possivel carregar as negociaçõeso do BD.')\r\n            });\r\n\r\n    }\r\n\r\n    apaga() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Negociações apagada com sucesso!')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possivel apagar as negociaçõeso do BD.')\r\n            });\r\n    }\r\n\r\n}\r\n"]}